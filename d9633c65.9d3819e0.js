(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{108:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),i=n(6),r=(n(0),n(120)),c={id:"android-quickstart",title:"Quickstart android",sidebar_label:"android Quickstart tutorial"},o={unversionedId:"sdk/android-quickstart",id:"sdk/android-quickstart",isDocsHomePage:!1,title:"Quickstart android",description:"This tutorial gets you started sending data from your iOS app to Intilery.",source:"@site/docs/sdk/android-quickmd.md",permalink:"/docs/sdk/android-quickstart",sidebar_label:"android Quickstart tutorial",sidebar:"sdk",previous:{title:"Intilery android Mobile SDK",permalink:"/docs/sdk/android"},next:{title:"Troubleshooting Intilery-android",permalink:"/docs/sdk/android-trouble"}},l=[{value:"Before you begin",id:"before-you-begin",children:[]},{value:"Client Key(s)",id:"client-keys",children:[]},{value:"Step 1: Install the SDK",id:"step-1-install-the-sdk",children:[]},{value:"Step 3: Identify Users",id:"step-3-identify-users",children:[]},{value:"Step 4: Track Actions",id:"step-4-track-actions",children:[]},{value:"Step 5: Flushing",id:"step-5-flushing",children:[]},{value:"What\u2019s Next?",id:"whats-next",children:[]}],s={rightToc:l};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This tutorial gets you started sending data from your iOS app to Intilery."),Object(r.b)("p",null,"If you want to dive deeper at any point, check out the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"./ios"}),"iOS Library Reference"),"."),Object(r.b)("h2",{id:"before-you-begin"},"Before you begin"),Object(r.b)("h2",{id:"client-keys"},"Client Key(s)"),Object(r.b)("p",null,"Client Key(s) are unique to each Client and Account, the client key for your account(s) are included in the tag snippet within the application. in the tag section."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note"),": YOUR_WRITE_KEY canbe found in the JavaScript tag in the ",Object(r.b)("inlineCode",{parentName:"p"},"annalytics.load('YOUR_WRITE_KEY')")," line"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note:")," If you have multiple accounts with Intilery, each tag has a seperate client key, obtain the tag snippet for each account by switching between accounts when you log in to Intilery."),Object(r.b)("h2",{id:"step-1-install-the-sdk"},"Step 1: Install the SDK"),Object(r.b)("p",null,"The recommended way to install Analytics for iOS is using ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://cocoapods.org/"}),"Cocoapods"),", since it means you can create a build with specific bundled destinations, and because it makes it simple to install and upgrade."),Object(r.b)("p",null,"First, add the ",Object(r.b)("inlineCode",{parentName:"p"},"Analytics")," dependency to your ",Object(r.b)("inlineCode",{parentName:"p"},"Podfile")," by adding the following line:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"pod 'Analytics', '~> 4.1'\n")),Object(r.b)("p",null,"Then in your application delegate\u2019s ",Object(r.b)("inlineCode",{parentName:"p"},"- application:didFinishLaunchingWithOptions:")," method, set up the SDK like so:"),Object(r.b)("h4",{id:"switft"},"Switft"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'let configuration = AnalyticsConfiguration(writeKey: "YOUR_WRITE_KEY")\nconfiguration.trackApplicationLifecycleEvents = true // Enable this to record certain application events automatically!\nconfiguration.recordScreenViews = true // Enable this to record screen views automatically!\nAnalytics.setup(with: configuration)\n')),Object(r.b)("h4",{id:"objective-c"},"Objective-C"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-objective-c"}),'SEGAnalyticsConfiguration *configuration = [SEGAnalyticsConfiguration configurationWithWriteKey:@"YOUR_WRITE_KEY"];\nconfiguration.trackApplicationLifecycleEvents = YES; // Enable this to record certain application events automatically!\nconfiguration.recordScreenViews = YES; // Enable this to record screen views automatically!\n[SEGAnalytics setupWithConfiguration:configuration];\n')),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Tip"),": You don\u2019t need to use initialization config parameters to track lifecycle events (",Object(r.b)("inlineCode",{parentName:"p"},"Application Opened"),", ",Object(r.b)("inlineCode",{parentName:"p"},"Application Installed"),", ",Object(r.b)("inlineCode",{parentName:"p"},"Application Updated"),") and screen views automatically, but we highly recommend that you do so you can start off already tracking some important core events. See ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#track"}),"the track call info")," for more info."),Object(r.b)("p",null,"Import the SDK in the files that you use it by adding the following line:"),Object(r.b)("h4",{id:"swift"},"Swift"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),"import Segment\n")),Object(r.b)("h4",{id:"objective-c-1"},"Objective-C"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-objective-c"}),"#import <Analytics/SEGAnalytics.h>\n")),Object(r.b)("h2",{id:"step-3-identify-users"},"Step 3: Identify Users"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Good to know"),": For any of the different methods described in this quickstart, you can replace the properties and traits in the code samples with variables that represent the data collected."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"identify")," method informs Intilery who the current user is. It takes a unique User ID, and any optional traits you know about them. You can read more about it in the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"./ios#identify"}),"identify reference"),"."),Object(r.b)("p",null,"Here\u2019s what a basic call to ",Object(r.b)("inlineCode",{parentName:"p"},"identify")," might look like:"),Object(r.b)("h4",{id:"swift-1"},"Swift"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'Analytics.shared().identify("f4ca124298", traits: ["name": "Michael Smith", "email": "msmith@example.com"])\n')),Object(r.b)("h4",{id:"objective-c-2"},"Objective-C"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-objective-c"}),'[[SEGAnalytics sharedAnalytics] identify:@"f4ca124298"\n                                    traits:@{ @"name": @"Michael Brown",\n                                    @"email": @"mbrown@example.com" }];\n')),Object(r.b)("p",null,"That call identifies Michael by his unique User ID (",Object(r.b)("inlineCode",{parentName:"p"},"f4ca124298"),", which is the one you know him by in your database) and labels him with ",Object(r.b)("inlineCode",{parentName:"p"},"name")," and ",Object(r.b)("inlineCode",{parentName:"p"},"email")," traits."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Hold up though!")," When you put that code in your iOS app, you need to replace those hard-coded trait values with the variables that represent the details of the currently logged-in user."),Object(r.b)("p",null,"Once you\u2019ve added an ",Object(r.b)("inlineCode",{parentName:"p"},"identify")," call, you\u2019re ready to move on to tracking!"),Object(r.b)("h2",{id:"step-4-track-actions"},"Step 4: Track Actions"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"track")," method is tells Intilery about the actions your users perform in your app. Every action triggers an \u201cevent\u201d, which can also have associated properties. You can read more about ",Object(r.b)("inlineCode",{parentName:"p"},"track")," in the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"./ios#track"}),"track method")," reference."),Object(r.b)("p",null,"To get started, the Intilery iOS SDK can automatically track a few important common events, such as ",Object(r.b)("strong",{parentName:"p"},"Application Installed"),", ",Object(r.b)("strong",{parentName:"p"},"Application Updated")," and ",Object(r.b)("strong",{parentName:"p"},"Application Opened"),". You can enable this option during initialization by adding the following lines."),Object(r.b)("h4",{id:"swift-2"},"Swift"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'AnalyticsConfiguration configuration = AnalyticsConfiguration(writeKey:"YOUR_WRITE_KEY")\nconfiguration.trackApplicationLifecycleEvents = true\nAnalytics.setup(with: configuration)\n')),Object(r.b)("h4",{id:"objective-c-3"},"Objective-C"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-objective-c"}),'SEGAnalyticsConfiguration *configuration = [SEGAnalyticsConfiguration configurationWithWriteKey:@"YOUR_WRITE_KEY"];\nconfiguration.trackApplicationLifecycleEvents = YES;\n[SEGAnalytics setupWithConfiguration:configuration];\n')),Object(r.b)("p",null,"You should also track events that indicate success in your mobile app, like ",Object(r.b)("strong",{parentName:"p"},"Signed Up"),", ",Object(r.b)("strong",{parentName:"p"},"Item Purchased")," or ",Object(r.b)("strong",{parentName:"p"},"Article Bookmarked"),". We recommend tracking just a few important events. You can always add more later!"),Object(r.b)("p",null,"Here\u2019s what a ",Object(r.b)("inlineCode",{parentName:"p"},"track")," call might look like when a user signs up:"),Object(r.b)("h4",{id:"swift-3"},"Swift"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'Analytics.shared().track("Signed Up", properties: ["plan": "Enterprise"])\n')),Object(r.b)("h4",{id:"objective-c-4"},"Objective-C"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-objective-c"}),'[[SEGAnalytics sharedAnalytics] track:@"Signed Up"\n                            properties:@{ @"plan": @"Enterprise" }];\n')),Object(r.b)("p",null,"That tells us that your user triggered the ",Object(r.b)("strong",{parentName:"p"},"Signed Up")," event, and chose your hypothetical ",Object(r.b)("inlineCode",{parentName:"p"},"'Enterprise'")," plan. Properties can be anything you want to record, for example:"),Object(r.b)("h4",{id:"swift-4"},"Swift"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'Analytics.shared().track("Article Bookmarked", properties: ["title": "Snow Fall", "subtitle": "The Avalanche at Tunnel Creek", "author": "John Branch"])\n')),Object(r.b)("h4",{id:"objective-c-5"},"Objective-C"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-objective-c"}),'[[SEGAnalytics sharedAnalytics] track:@"Article Bookmarked"\n                            properties:@{\n                                @"title": @"Snow Fall",\n                                @"subtitle": @"The Avalanche at Tunnel Creek",\n                                @"author": @"John Branch" }];\n')),Object(r.b)("p",null,"Once you\u2019ve added a few ",Object(r.b)("inlineCode",{parentName:"p"},"track")," calls, ",Object(r.b)("strong",{parentName:"p"},"you\u2019re set up!")," You successfully instrumented your app. However, there are a few important things to know about for mobile app instrumentation, so read on!"),Object(r.b)("h2",{id:"step-5-flushing"},"Step 5: Flushing"),Object(r.b)("p",null,"By default, Intilery sends (\u201cflushes\u201d) events from the iOS library in batches of ",Object(r.b)("inlineCode",{parentName:"p"},"20"),", however this is configurable. You can set the ",Object(r.b)("inlineCode",{parentName:"p"},"flushAt")," value to change the batch size, or you can set it to ",Object(r.b)("inlineCode",{parentName:"p"},"1")," to disable batching completely."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note"),": When you disable batching, Intilery sends events as they occur. This increases battery use."),Object(r.b)("h4",{id:"swift-5"},"Swift"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'let configuration = AnalyticsConfiguration(writeKey: "YOUR_WRITE_KEY")\nconfiguration.flushAt = 1\nAnalytics.setup(with: configuration)\n')),Object(r.b)("h4",{id:"objective-c-6"},"Objective-C"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-objective-c"}),'SEGAnalyticsConfiguration *configuration = [SEGAnalyticsConfiguration configurationWithWriteKey:@"YOUR_WRITE_KEY"];\nconfiguration.flushAt = 1;\n[SEGAnalytics setupWithConfiguration:configuration];\n')),Object(r.b)("p",null,"You can also manually call ",Object(r.b)("inlineCode",{parentName:"p"},"flush")," in your code to send all the messages in the queue:"),Object(r.b)("h4",{id:"swift-6"},"Swift"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'Analytics.shared().alias("glenncoco")\nAnalytics.shared().flush()\n')),Object(r.b)("h4",{id:"objective-c-7"},"Objective-C"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-objective-c"}),'[[SEGAnalytics sharedAnalytics] alias:@"glenncoco"];\n[[SEGAnalytics sharedAnalytics] flush]\n')),Object(r.b)("h2",{id:"whats-next"},"What\u2019s Next?"),Object(r.b)("p",null,"We just walked through the quickest way to get started with Intilery using Analytics for iOS. You might also want to check out our full ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"./ios"}),"Analytics for iOS reference")," to see what else is possible, or read about the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../apis/api1"}),"Tracking API methods")," to get a sense for the bigger picture."))}b.isMDXComponent=!0},120:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),b=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=b(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(n),d=a,h=p["".concat(c,".").concat(d)]||p[d]||u[d]||r;return n?i.a.createElement(h,o(o({ref:t},s),{},{components:n})):i.a.createElement(h,o({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var s=2;s<r;s++)c[s]=n[s];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);